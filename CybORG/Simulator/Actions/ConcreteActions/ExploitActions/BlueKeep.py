from ipaddress import IPv4Address

from CybORG.Shared import Observation
from CybORG.Simulator.Actions.ConcreteActions.ExploitActions.ExploitAction import ExploitAction
from CybORG.Shared.Enums import OperatingSystemPatch, OperatingSystemType, OperatingSystemDistribution
from CybORG.Simulator.Host import Host
from CybORG.Simulator.Process import Process
from CybORG.Simulator.State import State


class BlueKeep(ExploitAction):
    def __init__(self, session: int, agent: str, ip_address: IPv4Address):
        super().__init__(session, agent, ip_address)

    def execute(self, state: State) -> Observation:
        return self.sim_exploit(state, 3389, 'rdp')

    def test_exploit_works(self, target_host: Host, vuln_proc: Process, **kwargs):
        # the exact patches and OS distributions are described here:
        # https://borncity.com/win/2019/06/06/how-to-bluekeep-check-for-windows/
        correct_os_type = (target_host.os_type == OperatingSystemType.WINDOWS)
        if not correct_os_type:
            return False

        return self._get_unpatched_status(target_host)

    def _get_unpatched_status(self, target_host):
        xp_era_distributions = (
                OperatingSystemDistribution.WINDOWS_XP,
                OperatingSystemDistribution.WINDOWS_SVR_2003SP2
                )

        xp_era_patches = (OperatingSystemPatch.KB4500331,)

        vista_era_distributions = (
                OperatingSystemDistribution.WINDOWS_VISTA,
                OperatingSystemDistribution.WINDOWS_SVR_2008SP1
                )

        vista_era_patches = (
                OperatingSystemPatch.KB4499149,
                OperatingSystemPatch.KB4499180,
                )

        win7_era_distributions = (
                OperatingSystemDistribution.WINDOWS_SVR_2008R2,
                OperatingSystemDistribution.WINDOWS_7SP1
                )
        
        win7_era_patches = (
                OperatingSystemPatch.KB4499164,
                OperatingSystemPatch.KB4499175
                )

        distributions = (
                xp_era_distributions,
                vista_era_distributions,
                win7_era_distributions
                )

        patches = (
                xp_era_patches,
                vista_era_patches,
                win7_era_patches
                )

        patch_mapping = zip(distributions, patches)

        unpatched = True
        for distribution_era, patches in patch_mapping:
            if target_host.distribution in distribution_era:
                for patch in patches:
                    if patch in target_host.patches:
                        unpatched = False
                        break

        return unpatched
